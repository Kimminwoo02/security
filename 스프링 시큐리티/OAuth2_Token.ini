# OAuth2.0 Token Types

1. Access Token
    - 클라이언트에서 사용자의 보호된 리소스에 접근하기 위해 사용하는 일종의 자격 증명으로서 역할을 하며 리소스 소유자가 클라이언트에게 부여한 권한 부여의 표현이다.
    - 일반적으로 JWT(JSON Web Token) 형식을 취하지만 사양에 따라 그럴 필요가 없다
    - 토큰에는 해당 액세스 기간, 범위 및 서버에 필요한 기타 정보가 있다.
    - 타입에는 식별자 타입과 자체 포함타입이 있다.
    
2. Refresh Token 
    - 액세스 토큰이 만료된 후 새 액세스 토큰을 얻기 위해 클라이언트 응용 프로그램에서 사용하는 자격 증명
    - 액세스 토큰이 만료되는 경우 클라이언트는 권한 부여 서버로 인증하고 Refresh Token을 전달한다.
    - 인증 서버는 Refresh Token의 유혀성을 검사하고 새 액세스 토큰을 발급한다.
    - Refresh Token 은 액세스 토큰과 달리 권한 서버 토큰 엔드포인트에만 보내지고 리소스 서버에는 보내지 않는다.
    
3. Authorization Code
    - 권한 부여 코드 흐름에서 사용되며 이 코드는 클라이언트가 액세스 토큰과 교환할 임시 코드이다.
    - 사용자가 클라이언트가 요청하는 정보를 확인하고 인가 서버로부터 리다이렉트 되어 받아온다.
    

### Access Token 유형

- 식별자 타입

인가서버는 데이터 저장소에 토큰 내용을 저장하고 토큰에 대한 고유 식별자만 클라이언트에서 다시 발행한다. 이 토큰을 수신하는 API는 토큰의 유효성을 검사하기 위해 인가서버에 대한 백채널 통신을 열고 DB를 조회해야 한다.

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/5a6a34ec-a51c-4a41-a291-1e51029bf2c9/695f0c51-7221-441d-9423-f57d26f2f927/Untitled.png)

- 자체 포함 타입x

JWT 토큰 형식으로 발급되며 클레임 및 만료가 있는 보호된 데이터 구조이다. 리소스 서버 API가 검증 키 등의 핵심 자료에 대해 알게 되면 발급자와 통신할 필요 없이 자체 포함된 토큰의 유효성을 검사할 수 있다. 특정한 암호화 알고리즘에 의해 개인키로 서명되고 공개키로 검증할 수 있으며 만료될 때까지 유효하다. 