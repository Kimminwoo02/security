Remember Me

1. 세션이 만료되고 웹 브라우저가 종료된 후에도 어플리케이션이 사용자를 기억하는 기능
2. Remember--Me 쿠키에 대한 http 요청을 확인한 후 토큰 기반 인증을 이용해 유효성을 검사하고 토큰이 검증되면 사용자는 로그인 된다.
3. 사용자 라이프 사이클
    - 인증 성공(Remember-Me 쿠키 설정)
    - 인증 실패 (remember-Me쿠키가 존재하면 쿠키 무효화)
    - 로그아웃(remember-Me쿠키가 존재하면 쿠키 무효화) 


http.rememberMe() : RememberMe 기능이 작동한다.

protected void configure(HttpSecurity http) throws Exception{
    http.rememberMe()
        .rememberMeParameter("remember") // 기본 파라미터명은 remember-me
        .tokenValidaitySeconds(3600) // Default는 14일
        .alwaysRemember(true) // 리멤버 미 기능이 활성화되지 않아도 항상 실행
        .userDetailsService(userDetailsService)
 }

 요청이 들어오면
 1. RememberMeAuthenticationFilter :만약 Authentication 객체에 값이 있다면 필터가 동작하지 않는다. 이미 인증객체가 존재하기 때문
 2. RememberMeServices : 2개의 구현체가 있다. 
    1)tokenBasedRememberMeService : 실제로 토큰을 저장한 토큰과 사용자가 요청할 떄 들고온 쿠키를 비교 
    2)PersistentTokenBasedRememberMeService : 영구적인 방식으로 db에 토큰을 저장하고 클라이언트에서 가지고온 값과 db값을 비교
 3.Token Cookie 추출
 4.Token이 존재하는지 판단 : 없으면 chain.doFilter 실행
 5.Decode Token : 정상 유무 판단 -> Token이 서로 일치하는지 판단 -> 유저 계정이 있는지 판단. -> 새로운 authentication 생성. 이 과정 중 하나라도 No라면 Exception

 
